schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Mutation {
  createPost(input: CreatePostInput!): Post
  deletePost(id: ID!): Post
}

type Post {
  content: String
  id: ID!
  owner: String
  ownerName: String
  timestamp: Int
  type: String
}

type PostConnection {
  items: [Post!]!
  nextToken: String
}

type Query {
  getPost(id: ID!): Post
  listPosts(id: ID, limit: Int, nextToken: String, owner: String, sortDirection: SortDirection): PostConnection
}

type Subscription {
  onUpdate: Post @aws_subscribe(mutations : ["createPost", "deletePost"])
}

enum SortDirection {
  ASC
  DESC
}

input CreatePostInput {
  content: String!
  id: ID
}

input ModelSubscriptionIntInput {
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  in: [Int]
  le: Int
  lt: Int
  ne: Int
  notIn: [Int]
}

input ModelSubscriptionPostFilterInput {
  and: [ModelSubscriptionPostFilterInput]
  content: ModelSubscriptionStringInput
  or: [ModelSubscriptionPostFilterInput]
  timestamp: ModelSubscriptionIntInput
  type: ModelSubscriptionStringInput
}

input ModelSubscriptionStringInput {
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  in: [String]
  le: String
  lt: String
  ne: String
  notContains: String
  notIn: [String]
}
